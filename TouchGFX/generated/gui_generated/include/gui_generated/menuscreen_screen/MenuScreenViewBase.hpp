/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef MENUSCREENVIEWBASE_HPP
#define MENUSCREENVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/menuscreen_screen/MenuScreenPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/Image.hpp>
#include <touchgfx/widgets/Button.hpp>
#include <touchgfx/widgets/BoxWithBorder.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/containers/buttons/Buttons.hpp>

class MenuScreenViewBase : public touchgfx::View<MenuScreenPresenter>
{
public:
    MenuScreenViewBase();
    virtual ~MenuScreenViewBase() {}
    virtual void setupScreen();

    /*
     * Custom Actions
     */
    virtual void keyboardSelectedVar(uint8_t value);
    virtual void afterTransition();

    /*
     * Virtual Action Handlers
     */
    virtual void keyboardSelected(uint8_t value)
    {
        // Override and implement this function in MenuScreen
    }

    virtual void updateScreen()
    {
        // Override and implement this function in MenuScreen
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::Image image1;
    touchgfx::Button button1;
    touchgfx::BoxWithBorder boxWithBorder1;
    touchgfx::BoxWithBorder boxWithBorder1_1;
    touchgfx::TextArea textArea1_1;
    touchgfx::TextArea textArea1_1_1;
    touchgfx::TextAreaWithOneWildcard textAreaSsid;
    touchgfx::TextAreaWithOneWildcard textAreaPw;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger > flexButtonSsid;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger > flexButtonPw;

    /*
     * Wildcard Buffers
     */
    static const uint16_t TEXTAREASSID_SIZE = 10;
    touchgfx::Unicode::UnicodeChar textAreaSsidBuffer[TEXTAREASSID_SIZE];
    static const uint16_t TEXTAREAPW_SIZE = 10;
    touchgfx::Unicode::UnicodeChar textAreaPwBuffer[TEXTAREAPW_SIZE];

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<MenuScreenViewBase, const touchgfx::AbstractButton&> buttonCallback;
    touchgfx::Callback<MenuScreenViewBase, const touchgfx::AbstractButtonContainer&> flexButtonCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);
    void flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src);

};

#endif // MENUSCREENVIEWBASE_HPP
