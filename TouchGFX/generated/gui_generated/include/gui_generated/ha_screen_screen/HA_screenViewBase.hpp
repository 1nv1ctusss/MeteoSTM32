/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef HA_SCREENVIEWBASE_HPP
#define HA_SCREENVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/ha_screen_screen/HA_screenPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/Image.hpp>
#include <touchgfx/widgets/Button.hpp>
#include <touchgfx/containers/scrollers/ScrollList.hpp>
#include <gui/containers/ListElementContainer.hpp>

class HA_screenViewBase : public touchgfx::View<HA_screenPresenter>
{
public:
    HA_screenViewBase();
    virtual ~HA_screenViewBase() {}
    virtual void setupScreen();

    virtual void scrollList1UpdateItem(ListElementContainer& item, int16_t itemIndex)
    {
        // Override and implement this function in HA_screen
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::Image image1;
    touchgfx::Button ReturnButton;
    touchgfx::ScrollList scrollList1;
    touchgfx::DrawableListItems<ListElementContainer, 6> scrollList1ListItems;

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<HA_screenViewBase, const touchgfx::AbstractButton&> buttonCallback;
    touchgfx::Callback<HA_screenViewBase, touchgfx::DrawableListItemsInterface*, int16_t, int16_t> updateItemCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);
    void updateItemCallbackHandler(touchgfx::DrawableListItemsInterface* items, int16_t containerIndex, int16_t itemIndex);

};

#endif // HA_SCREENVIEWBASE_HPP
