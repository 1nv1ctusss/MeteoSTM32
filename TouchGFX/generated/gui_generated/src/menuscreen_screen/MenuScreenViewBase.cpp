/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/menuscreen_screen/MenuScreenViewBase.hpp>
#include <touchgfx/Color.hpp>
#include "BitmapDatabase.hpp"
#include <texts/TextKeysAndLanguages.hpp>

MenuScreenViewBase::MenuScreenViewBase() :
    buttonCallback(this, &MenuScreenViewBase::buttonCallbackHandler),
    flexButtonCallback(this, &MenuScreenViewBase::flexButtonCallbackHandler)
{

    __background.setPosition(0, 0, 800, 480);
    __background.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));

    image1.setXY(0, 0);
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_ID));

    button1.setXY(20, 20);
    button1.setBitmaps(touchgfx::Bitmap(BITMAP_RETURN_ID), touchgfx::Bitmap(BITMAP_RETURN_ACTIVE_ID));
    button1.setAction(buttonCallback);

    boxWithBorder1.setPosition(300, 185, 234, 50);
    boxWithBorder1.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    boxWithBorder1.setBorderColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
    boxWithBorder1.setBorderSize(5);

    boxWithBorder1_1.setPosition(300, 297, 234, 50);
    boxWithBorder1_1.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    boxWithBorder1_1.setBorderColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
    boxWithBorder1_1.setBorderSize(5);

    textArea1_1.setXY(380, 133);
    textArea1_1.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    textArea1_1.setLinespacing(0);
    textArea1_1.setTypedText(touchgfx::TypedText(T_SINGLEUSEID10));

    textArea1_1_1.setXY(330, 244);
    textArea1_1_1.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    textArea1_1_1.setLinespacing(0);
    textArea1_1_1.setTypedText(touchgfx::TypedText(T_SINGLEUSEID11));

    textAreaSsid.setPosition(320, 191, 196, 38);
    textAreaSsid.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
    textAreaSsid.setLinespacing(0);
    textAreaSsidBuffer[0] = 0;
    textAreaSsid.setWildcard(textAreaSsidBuffer);
    textAreaSsid.setTypedText(touchgfx::TypedText(T_SINGLEUSEID12));

    textAreaPw.setPosition(320, 304, 196, 37);
    textAreaPw.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
    textAreaPw.setLinespacing(0);
    textAreaPwBuffer[0] = 0;
    textAreaPw.setWildcard(textAreaPwBuffer);
    textAreaPw.setTypedText(touchgfx::TypedText(T_SINGLEUSEID13));

    flexButtonSsid.setBoxWithBorderPosition(0, 0, 234, 50);
    flexButtonSsid.setBorderSize(5);
    flexButtonSsid.setBoxWithBorderColors(touchgfx::Color::getColorFrom24BitRGB(0, 102, 153), touchgfx::Color::getColorFrom24BitRGB(0, 153, 204), touchgfx::Color::getColorFrom24BitRGB(0, 51, 102), touchgfx::Color::getColorFrom24BitRGB(51, 102, 153));
    flexButtonSsid.setPosition(300, 185, 234, 50);
    flexButtonSsid.setAlpha(0);
    flexButtonSsid.setAction(flexButtonCallback);

    flexButtonPw.setBoxWithBorderPosition(0, 0, 234, 50);
    flexButtonPw.setBorderSize(5);
    flexButtonPw.setBoxWithBorderColors(touchgfx::Color::getColorFrom24BitRGB(0, 102, 153), touchgfx::Color::getColorFrom24BitRGB(0, 153, 204), touchgfx::Color::getColorFrom24BitRGB(0, 51, 102), touchgfx::Color::getColorFrom24BitRGB(51, 102, 153));
    flexButtonPw.setPosition(300, 297, 234, 50);
    flexButtonPw.setAlpha(0);
    flexButtonPw.setAction(flexButtonCallback);

    add(__background);
    add(image1);
    add(button1);
    add(boxWithBorder1);
    add(boxWithBorder1_1);
    add(textArea1_1);
    add(textArea1_1_1);
    add(textAreaSsid);
    add(textAreaPw);
    add(flexButtonSsid);
    add(flexButtonPw);
}

void MenuScreenViewBase::setupScreen()
{

}

//Called when the screen transition ends
void MenuScreenViewBase::afterTransition()
{
    //UpdateScreen
    //When screen transition ends call virtual function
    //Call updateScreen
    updateScreen();
}

void MenuScreenViewBase::keyboardSelectedVar(uint8_t value)
{
    //keyboardSelected
    //When keyboardSelectedVar is called call virtual function
    //Call keyboardSelected
    keyboardSelected(value);

    //ChangeToScreenKeyboard
    //When keyboardSelected completed change screen to ScreenKeyboard
    //Go to ScreenKeyboard with no screen transition
    application().gotoScreenKeyboardScreenNoTransition();
}

void MenuScreenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &button1)
    {
        //ReturnToMainScreen
        //When button1 clicked change screen to MainScreen
        //Go to MainScreen with no screen transition
        application().gotoMainScreenScreenNoTransition();
    }
}

void MenuScreenViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &flexButtonSsid)
    {
        //ButtonSsid
        //When flexButtonSsid clicked call keyboardSelectedVar on MenuScreen
        //Call keyboardSelectedVar
        keyboardSelectedVar(0);
    }
    else if (&src == &flexButtonPw)
    {
        //ButtonPw
        //When flexButtonPw clicked call keyboardSelectedVar on MenuScreen
        //Call keyboardSelectedVar
        keyboardSelectedVar(1);
    }
}
