// 4.16.1 0x2364d221
// Generated by imageconverter. Please, do not edit!

#include <BitmapDatabase.hpp>
#include <touchgfx/Bitmap.hpp>

extern const unsigned char image_background[]; // BITMAP_BACKGROUND_ID = 0, Size: 800x480 pixels
extern const unsigned char image_bgforha[]; // BITMAP_BGFORHA_ID = 1, Size: 650x80 pixels
extern const unsigned char image_blue_buttons_square_large[]; // BITMAP_BLUE_BUTTONS_SQUARE_LARGE_ID = 2, Size: 360x60 pixels
extern const unsigned char image_cloudy[]; // BITMAP_CLOUDY_ID = 3, Size: 266x280 pixels
extern const unsigned char image_emulatorbuttonoff[]; // BITMAP_EMULATORBUTTONOFF_ID = 4, Size: 175x50 pixels
extern const unsigned char image_emulatorbuttonon[]; // BITMAP_EMULATORBUTTONON_ID = 5, Size: 175x50 pixels
extern const unsigned char image_haoff[]; // BITMAP_HAOFF_ID = 6, Size: 175x50 pixels
extern const unsigned char image_haon[]; // BITMAP_HAON_ID = 7, Size: 175x50 pixels
extern const unsigned char image_icon_keyboard_even_row[]; // BITMAP_ICON_KEYBOARD_EVEN_ROW_ID = 8, Size: 47x28 pixels
extern const unsigned char image_icon_keyboard_highlighted[]; // BITMAP_ICON_KEYBOARD_HIGHLIGHTED_ID = 9, Size: 47x28 pixels
extern const unsigned char image_icon_keyboard_odd_row[]; // BITMAP_ICON_KEYBOARD_ODD_ROW_ID = 10, Size: 47x28 pixels
extern const unsigned char image_iconsun[]; // BITMAP_ICONSUN_ID = 11, Size: 110x120 pixels
extern const unsigned char image_keyboard_background[]; // BITMAP_KEYBOARD_BACKGROUND_ID = 12, Size: 320x240 pixels
extern const unsigned char image_keyboard_key_delete_highlighted[]; // BITMAP_KEYBOARD_KEY_DELETE_HIGHLIGHTED_ID = 13, Size: 56x40 pixels
extern const unsigned char image_keyboard_key_highlighted[]; // BITMAP_KEYBOARD_KEY_HIGHLIGHTED_ID = 14, Size: 26x40 pixels
extern const unsigned char image_keyboard_key_num_highlighted[]; // BITMAP_KEYBOARD_KEY_NUM_HIGHLIGHTED_ID = 15, Size: 56x40 pixels
extern const unsigned char image_keyboard_key_shift_highlighted[]; // BITMAP_KEYBOARD_KEY_SHIFT_HIGHLIGHTED_ID = 16, Size: 56x40 pixels
extern const unsigned char image_keyboard_space_highlighted[]; // BITMAP_KEYBOARD_SPACE_HIGHLIGHTED_ID = 17, Size: 252x40 pixels
extern const unsigned char image_listimg[]; // BITMAP_LISTIMG_ID = 18, Size: 64x64 pixels
extern const unsigned char image_mainscreen1[]; // BITMAP_MAINSCREEN1_ID = 19, Size: 801x481 pixels
extern const unsigned char image_menubuttonoff[]; // BITMAP_MENUBUTTONOFF_ID = 20, Size: 175x50 pixels
extern const unsigned char image_menubuttonon[]; // BITMAP_MENUBUTTONON_ID = 21, Size: 175x50 pixels
extern const unsigned char image_moon[]; // BITMAP_MOON_ID = 22, Size: 266x280 pixels
extern const unsigned char image_rain[]; // BITMAP_RAIN_ID = 23, Size: 266x280 pixels
extern const unsigned char image_return[]; // BITMAP_RETURN_ID = 24, Size: 105x105 pixels
extern const unsigned char image_return_active[]; // BITMAP_RETURN_ACTIVE_ID = 25, Size: 105x105 pixels
extern const unsigned char image_slidemenu[]; // BITMAP_SLIDEMENU_ID = 26, Size: 801x171 pixels
extern const unsigned char image_sliderdark[]; // BITMAP_SLIDERDARK_ID = 27, Size: 670x10 pixels
extern const unsigned char image_sliderlight[]; // BITMAP_SLIDERLIGHT_ID = 28, Size: 670x10 pixels
extern const unsigned char image_sliderpin[]; // BITMAP_SLIDERPIN_ID = 29, Size: 30x30 pixels
extern const unsigned char image_snow[]; // BITMAP_SNOW_ID = 30, Size: 266x280 pixels
extern const unsigned char image_sunny[]; // BITMAP_SUNNY_ID = 31, Size: 266x280 pixels
extern const unsigned char image_thunder[]; // BITMAP_THUNDER_ID = 32, Size: 266x280 pixels
extern const unsigned char image_wifi[]; // BITMAP_WIFI_ID = 33, Size: 60x60 pixels
extern const unsigned char image_wifibuttonoff[]; // BITMAP_WIFIBUTTONOFF_ID = 34, Size: 179x50 pixels
extern const unsigned char image_wifibuttonon[]; // BITMAP_WIFIBUTTONON_ID = 35, Size: 179x50 pixels

const touchgfx::Bitmap::BitmapData bitmap_database[] =
{
    { image_background, 0, 800, 480, 0, 0, 800, (uint8_t)(touchgfx::Bitmap::RGB888) >> 3, 480, (uint8_t)(touchgfx::Bitmap::RGB888) & 0x7 },
    { image_bgforha, 0, 650, 80, 15, 0, 620, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 80, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_blue_buttons_square_large, 0, 360, 60, 4, 4, 352, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 50, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_cloudy, 0, 266, 280, 4, 6, 258, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 268, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_emulatorbuttonoff, 0, 175, 50, 11, 1, 153, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 48, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_emulatorbuttonon, 0, 175, 50, 11, 1, 153, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 48, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_haoff, 0, 175, 50, 11, 1, 153, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 48, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_haon, 0, 175, 50, 11, 1, 153, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 48, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_icon_keyboard_even_row, 0, 47, 28, 0, 0, 47, (uint8_t)(touchgfx::Bitmap::RGB888) >> 3, 28, (uint8_t)(touchgfx::Bitmap::RGB888) & 0x7 },
    { image_icon_keyboard_highlighted, 0, 47, 28, 0, 0, 47, (uint8_t)(touchgfx::Bitmap::RGB888) >> 3, 28, (uint8_t)(touchgfx::Bitmap::RGB888) & 0x7 },
    { image_icon_keyboard_odd_row, 0, 47, 28, 0, 0, 47, (uint8_t)(touchgfx::Bitmap::RGB888) >> 3, 28, (uint8_t)(touchgfx::Bitmap::RGB888) & 0x7 },
    { image_iconsun, 0, 110, 120, 37, 43, 35, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 34, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_keyboard_background, 0, 320, 240, 0, 0, 320, (uint8_t)(touchgfx::Bitmap::RGB888) >> 3, 240, (uint8_t)(touchgfx::Bitmap::RGB888) & 0x7 },
    { image_keyboard_key_delete_highlighted, 0, 56, 40, 0, 0, 56, (uint8_t)(touchgfx::Bitmap::RGB888) >> 3, 40, (uint8_t)(touchgfx::Bitmap::RGB888) & 0x7 },
    { image_keyboard_key_highlighted, 0, 26, 40, 0, 0, 26, (uint8_t)(touchgfx::Bitmap::RGB888) >> 3, 40, (uint8_t)(touchgfx::Bitmap::RGB888) & 0x7 },
    { image_keyboard_key_num_highlighted, 0, 56, 40, 0, 0, 56, (uint8_t)(touchgfx::Bitmap::RGB888) >> 3, 40, (uint8_t)(touchgfx::Bitmap::RGB888) & 0x7 },
    { image_keyboard_key_shift_highlighted, 0, 56, 40, 0, 0, 56, (uint8_t)(touchgfx::Bitmap::RGB888) >> 3, 40, (uint8_t)(touchgfx::Bitmap::RGB888) & 0x7 },
    { image_keyboard_space_highlighted, 0, 252, 40, 0, 0, 252, (uint8_t)(touchgfx::Bitmap::RGB888) >> 3, 40, (uint8_t)(touchgfx::Bitmap::RGB888) & 0x7 },
    { image_listimg, 0, 64, 64, 53, 32, 3, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 28, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_mainscreen1, 0, 801, 481, 1, 1, 799, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 479, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_menubuttonoff, 0, 175, 50, 11, 1, 153, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 48, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_menubuttonon, 0, 175, 50, 11, 1, 153, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 48, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_moon, 0, 266, 280, 4, 6, 258, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 268, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_rain, 0, 266, 280, 4, 6, 258, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 268, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_return, 0, 105, 105, 5, 5, 95, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 95, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_return_active, 0, 105, 105, 5, 5, 95, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 95, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_slidemenu, 0, 801, 171, 226, 159, 350, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 12, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_sliderdark, 0, 670, 10, 4, 0, 662, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 10, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_sliderlight, 0, 670, 10, 4, 0, 662, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 10, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_sliderpin, 0, 30, 30, 7, 2, 16, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 26, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_snow, 0, 266, 280, 4, 6, 258, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 268, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_sunny, 0, 266, 280, 4, 6, 258, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 268, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_thunder, 0, 266, 280, 4, 6, 258, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 268, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_wifi, 0, 60, 60, 19, 7, 22, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 2, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_wifibuttonoff, 0, 179, 50, 11, 1, 153, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 48, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_wifibuttonon, 0, 179, 50, 11, 1, 153, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 48, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 }
};

namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
}
