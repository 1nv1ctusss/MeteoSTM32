/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.5 */

#ifndef PB_METEO_PB_H_INCLUDED
#define PB_METEO_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _Climate { 
    bool has_insideTemperature;
    int32_t insideTemperature; 
    bool has_insideHumidity;
    int32_t insideHumidity; 
    bool has_insideCO2;
    int32_t insideCO2; 
    bool has_insidePressure;
    int32_t insidePressure; 
    bool has_outsideTemperature;
    int32_t outsideTemperature; 
    bool has_outsideHumidity;
    int32_t outsideHumidity; 
    bool has_outsidePressure;
    int32_t outsidePressure; 
    bool has_weather_conditions;
    char weather_conditions[30]; 
} Climate;

typedef struct _Sensor { 
    bool has_id;
    char id[30]; 
    bool has_friendly_name;
    char friendly_name[30]; 
    bool has_unit;
    char unit[10]; 
    bool has_value;
    char value[10]; 
} Sensor;

typedef struct _EspMsg { 
    bool has_rtcTimestamp;
    uint32_t rtcTimestamp; 
    bool has_climate;
    Climate climate; 
    bool has_wlan_login;
    char wlan_login[15]; 
    bool has_wlan_pwd;
    char wlan_pwd[15]; 
    bool has_wlan_rssi;
    int32_t wlan_rssi; 
    pb_size_t sensor_count;
    Sensor sensor[30]; 
} EspMsg;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define EspMsg_init_default                      {false, 0, false, Climate_init_default, false, "", false, "", false, 0, 0, {Sensor_init_default, Sensor_init_default, Sensor_init_default, Sensor_init_default, Sensor_init_default, Sensor_init_default, Sensor_init_default, Sensor_init_default, Sensor_init_default, Sensor_init_default, Sensor_init_default, Sensor_init_default, Sensor_init_default, Sensor_init_default, Sensor_init_default, Sensor_init_default, Sensor_init_default, Sensor_init_default, Sensor_init_default, Sensor_init_default, Sensor_init_default, Sensor_init_default, Sensor_init_default, Sensor_init_default, Sensor_init_default, Sensor_init_default, Sensor_init_default, Sensor_init_default, Sensor_init_default, Sensor_init_default}}
#define Climate_init_default                     {false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, ""}
#define Sensor_init_default                      {false, "", false, "", false, "", false, ""}
#define EspMsg_init_zero                         {false, 0, false, Climate_init_zero, false, "", false, "", false, 0, 0, {Sensor_init_zero, Sensor_init_zero, Sensor_init_zero, Sensor_init_zero, Sensor_init_zero, Sensor_init_zero, Sensor_init_zero, Sensor_init_zero, Sensor_init_zero, Sensor_init_zero, Sensor_init_zero, Sensor_init_zero, Sensor_init_zero, Sensor_init_zero, Sensor_init_zero, Sensor_init_zero, Sensor_init_zero, Sensor_init_zero, Sensor_init_zero, Sensor_init_zero, Sensor_init_zero, Sensor_init_zero, Sensor_init_zero, Sensor_init_zero, Sensor_init_zero, Sensor_init_zero, Sensor_init_zero, Sensor_init_zero, Sensor_init_zero, Sensor_init_zero}}
#define Climate_init_zero                        {false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, ""}
#define Sensor_init_zero                         {false, "", false, "", false, "", false, ""}

/* Field tags (for use in manual encoding/decoding) */
#define Climate_insideTemperature_tag            1
#define Climate_insideHumidity_tag               2
#define Climate_insideCO2_tag                    3
#define Climate_insidePressure_tag               4
#define Climate_outsideTemperature_tag           5
#define Climate_outsideHumidity_tag              6
#define Climate_outsidePressure_tag              7
#define Climate_weather_conditions_tag           8
#define Sensor_id_tag                            1
#define Sensor_friendly_name_tag                 2
#define Sensor_unit_tag                          3
#define Sensor_value_tag                         4
#define EspMsg_rtcTimestamp_tag                  1
#define EspMsg_climate_tag                       2
#define EspMsg_wlan_login_tag                    3
#define EspMsg_wlan_pwd_tag                      4
#define EspMsg_wlan_rssi_tag                     5
#define EspMsg_sensor_tag                        6

/* Struct field encoding specification for nanopb */
#define EspMsg_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, UINT32,   rtcTimestamp,      1) \
X(a, STATIC,   OPTIONAL, MESSAGE,  climate,           2) \
X(a, STATIC,   OPTIONAL, STRING,   wlan_login,        3) \
X(a, STATIC,   OPTIONAL, STRING,   wlan_pwd,          4) \
X(a, STATIC,   OPTIONAL, INT32,    wlan_rssi,         5) \
X(a, STATIC,   REPEATED, MESSAGE,  sensor,            6)
#define EspMsg_CALLBACK NULL
#define EspMsg_DEFAULT NULL
#define EspMsg_climate_MSGTYPE Climate
#define EspMsg_sensor_MSGTYPE Sensor

#define Climate_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, INT32,    insideTemperature,   1) \
X(a, STATIC,   OPTIONAL, INT32,    insideHumidity,    2) \
X(a, STATIC,   OPTIONAL, INT32,    insideCO2,         3) \
X(a, STATIC,   OPTIONAL, INT32,    insidePressure,    4) \
X(a, STATIC,   OPTIONAL, INT32,    outsideTemperature,   5) \
X(a, STATIC,   OPTIONAL, INT32,    outsideHumidity,   6) \
X(a, STATIC,   OPTIONAL, INT32,    outsidePressure,   7) \
X(a, STATIC,   OPTIONAL, STRING,   weather_conditions,   8)
#define Climate_CALLBACK NULL
#define Climate_DEFAULT NULL

#define Sensor_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, STRING,   id,                1) \
X(a, STATIC,   OPTIONAL, STRING,   friendly_name,     2) \
X(a, STATIC,   OPTIONAL, STRING,   unit,              3) \
X(a, STATIC,   OPTIONAL, STRING,   value,             4)
#define Sensor_CALLBACK NULL
#define Sensor_DEFAULT NULL

extern const pb_msgdesc_t EspMsg_msg;
extern const pb_msgdesc_t Climate_msg;
extern const pb_msgdesc_t Sensor_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define EspMsg_fields &EspMsg_msg
#define Climate_fields &Climate_msg
#define Sensor_fields &Sensor_msg

/* Maximum encoded size of messages (where known) */
#define Climate_size                             108
#define EspMsg_size                              2739
#define Sensor_size                              84

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
